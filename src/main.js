import './style.css';
import SceneEngine from '../core/SceneEngine.js';
import UIManager from '../core/UIManager.js';
import CharacterPresets from '../systems/CharacterPresets.js';
import store from '../systems/store.js';
import testRunner from '../core/testing.js';
import DebugLogger from '../core/DebugLogger.js';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏
window.debugLogger?.log('INFO', 'üöÄ Starting SissyLifeSim...');
window.debugLogger?.log('DEBUG', 'Initializing core systems');

// –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –î–û —Å–æ–∑–¥–∞–Ω–∏—è –¥–≤–∏–∂–∫–∞
window.debugLogger?.log('DEBUG', 'Registering global functions...');

// Expose dev functions first
window.store = store;
window.saveGame = () => store.saveGame();
window.loadGame = () => {
  if (store.loadGame()) {
    window.gameEngine.loadScene('start');
  }
};

// Character Preset Functions
window.applyCharacterPreset = (presetId) => {
  const success = CharacterPresets.applyPreset(store, presetId);
  if (success) {
    console.log(`Applied preset: ${presetId}`);
    return true;
  }
  return false;
};

window.getCharacterPresets = () => CharacterPresets.getAllPresets();
window.getPresetEffects = (presetId) => CharacterPresets.getPresetEffects(presetId);

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞–º–∏
window.setStat = (statName, value) => store.setStat(statName, value);
window.addStat = (statName, delta) => store.addStat(statName, delta);
window.getStat = (statName) => store.stats[statName];
window.getStatRank = (statName) => store.getStatRank(statName);

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–ª–∞–≥–∞–º–∏
window.setFlag = (key, value) => {
  store.setFlag(key, value);
};
window.getFlag = (key) => store.getFlag(key);

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º
window.tick = (minutes) => store.tick(minutes);
window.getTime = () => store.getTimeString();
window.getTimePhase = () => store.getTimePhase();

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
window.addItem = (item) => store.addItem(item);
window.removeItem = (itemId) => store.removeItem(itemId);
window.equipItem = (item, slot) => store.equipItem(item, slot);
window.unequipItem = (slot) => store.unequipItem(slot);

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å—Ü–µ–Ω
window.nextStep = (id) => {
  const element = document.getElementById(id);
  if (element && element.style) {
    element.style.display = 'block';
  }
};

// –õ–æ–≥–∏—Ä—É–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.debugLogger?.log('DEBUG', 'Basic functions registered, creating engines...');

// –°–†–ê–ó–£ —Å–æ–∑–¥–∞—ë–º –¥–≤–∏–∂–æ–∫ –ü–û–°–õ–ï —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
const engine = new SceneEngine('#game-content');
const uiManager = new UIManager();

// –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–≤–∏–∂–∫–∞
window.debugLogger?.log('DEBUG', 'SceneEngine and UIManager created');

function bootstrap() {
  const params = new URL(window.location).searchParams;
  const firstScene = params.get('scene') || 'intro';
  
  window.debugLogger?.log('INFO', `Bootstrap: Loading initial scene '${firstScene}'`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
  window.debugLogger?.checkFunctionAvailability([
    'goToMirror', 'takeShower', 'brushTeeth', 'useToilet',
    'goToRoom', 'selectPreset', 'confirmName', 'setPronoun'
  ]);
  
  engine.loadScene(firstScene);
}

// Expose the engine globally for UIManager
window.gameEngine = engine;

bootstrap();

if (import.meta.hot) {
  import.meta.hot.accept(['../core/SceneEngine.js'], () => {
    console.log('üîÅ SceneEngine hot updated');
    bootstrap();
  });
}

console.log('Sissy Life Sim –∑–∞–≥—Ä—É–∂–µ–Ω');

// ================== –û–¢–õ–ê–î–û–ß–ù–´–ï –§–£–ù–ö–¶–ò–ò ==================

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å HTML
window.debugHTMLProblem = () => {
  window.debugLogger?.log('INFO', 'üîç Starting HTML rendering diagnostics...');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π
  const functions = [
    'goToMirror', 'takeShower', 'brushTeeth', 'useToilet', 'doSkincare', 'shaveBody',
    'goToRoom', 'selectPreset', 'confirmName', 'setPronoun', 'startGame',
    'loadBathroom', 'loadHallway', 'loadSpecialBathroomActions',
    'applyMakeup', 'takeBath', 'useHairRemovalCream', 'doManicure'
  ];
  
  window.debugLogger?.log('INFO', 'üìã Checking function availability:');
  functions.forEach(func => {
    const exists = typeof window[func] === 'function';
    window.debugLogger?.log(exists ? 'INFO' : 'ERROR', `  ${func}: ${exists ? '‚úÖ' : '‚ùå'}`);
  });
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
  const content = document.getElementById('game-content');
  if (content) {
    const html = content.innerHTML;
    window.debugLogger?.log('INFO', `üìÑ Current content length: ${html.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ–≥–æ–≤
    const hasEscaped = /&lt;|&gt;|&quot;/.test(html);
    window.debugLogger?.log(hasEscaped ? 'ERROR' : 'INFO', 
      `Escaped HTML tags found: ${hasEscaped ? '‚ùå YES' : '‚úÖ NO'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º onclick –∞—Ç—Ä–∏–±—É—Ç—ã
    const onclicks = content.querySelectorAll('[onclick]');
    window.debugLogger?.log('INFO', `Found ${onclicks.length} elements with onclick`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ
    Array.from(onclicks).slice(0, 5).forEach((el, i) => {
      const onclick = el.getAttribute('onclick');
      const funcName = onclick.match(/^([^(]+)\(/)?.[1];
      const funcExists = funcName && typeof window[funcName] === 'function';
      
      window.debugLogger?.log(funcExists ? 'INFO' : 'ERROR',
        `  [${i}] ${onclick} -> ${funcExists ? '‚úÖ' : '‚ùå'}`);
    });
  }
  
  // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—Ä–æ—Å—Ç–æ–≥–æ HTML —á–µ—Ä–µ–∑ marked
  window.debugLogger?.log('INFO', 'üß™ Testing marked rendering:');
  
  const testMd = `# Test
<div class="test">
  <button onclick="alert('test')">Click me</button>
</div>`;
  
  const testHtml = window.gameEngine.renderMarkdown(testMd);
  window.debugLogger?.log('INFO', 'Test markdown rendered to:', { html: testHtml });
  
  // 4. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏
  window.debugLogger?.log('INFO', '‚úÖ Diagnostics complete. Check the debug panel!');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ü–µ–Ω—ã —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
window.reloadSceneWithDebug = (sceneId) => {
  window.debugLogger?.clearLogs();
  window.debugLogger?.log('INFO', `üîÑ Force reloading scene: ${sceneId}`);
  window.gameEngine.loadScene(sceneId);
};

// –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
window.quickCheck = () => {
  window.debugLogger?.log('INFO', 'üîç Quick Check: Testing fixes...');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Å—ã–ª–∫–∏
  const content = document.getElementById('game-content');
  if (content) {
    const hasObjectText = content.innerHTML.includes('[object Object]');
    window.debugLogger?.log(hasObjectText ? 'ERROR' : 'INFO', 
      `Links rendering: ${hasObjectText ? '‚ùå BROKEN' : '‚úÖ OK'}`);
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
  const criticalFuncs = ['selectPreset', 'goToMirror', 'takeShower'];
  criticalFuncs.forEach(func => {
    const exists = typeof window[func] === 'function';
    window.debugLogger?.log(exists ? 'INFO' : 'ERROR', 
      `${func}: ${exists ? '‚úÖ' : '‚ùå'}`);
  });
  
  // 3. –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—É—é —Å—Ü–µ–Ω—É
  window.debugLogger?.log('INFO', 'Testing character creation scene...');
  window.gameEngine.loadScene('character_creation');
};

// Expose additional dev functions
window.uiManager = uiManager;

// ================== –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–¶–ï–ù ==================

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
window.selectPreset = (presetId) => {
  const PRESETS = {
    nerd: { name: '–ë–æ—Ç–∞–Ω–∏–∫', emoji: 'ü§ì' },
    rich: { name: '–ú–∞–∂–æ—Ä', emoji: 'üíé' }, 
    crossdresser: { name: '–ö—Ä–æ—Å—Å–¥—Ä–µ—Å—Å–µ—Ä', emoji: 'üíÉ' },
    athlete: { name: '–°–ø–æ—Ä—Ç—Å–º–µ–Ω', emoji: 'üí™' },
    default: { name: '–û–±—ã—á–Ω—ã–π', emoji: 'üòê' }
  };

  window.selectedPreset = presetId;
  const preset = PRESETS[presetId];
  
  const presetDetails = document.getElementById('preset-details');
  const presetInfo = document.getElementById('preset-info');
  
  if (presetDetails && presetInfo) {
    presetDetails.style.display = 'block';
    presetInfo.innerHTML = `
      <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 8px; margin-bottom: 20px;">
        <h3>${preset.emoji} –í—ã–±—Ä–∞–Ω: ${preset.name}</h3>
        <p>–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–∏–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.</p>
      </div>
    `;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–µ—Å–µ—Ç —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    if (window.applyCharacterPreset) {
      window.applyCharacterPreset(presetId);
    }
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    const stepName = document.getElementById('step-name');
    if (stepName) {
      stepName.scrollIntoView({ behavior: 'smooth' });
    }
  }
};

window.confirmName = () => {
  const nameInput = document.getElementById('charName');
  if (!nameInput) return;
  
  const name = nameInput.value.trim();
  if (!name) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è');
    return;
  }
  
  window.setFlag('name', name);
  
  const stepName = document.getElementById('step-name');
  const stepPronoun = document.getElementById('step-pronoun');
  
  if (stepName && stepPronoun) {
    stepName.style.display = 'none';
    stepPronoun.style.display = 'block';
    stepPronoun.scrollIntoView({ behavior: 'smooth' });
  }
};

window.setPronoun = (pronoun) => {
  window.setFlag('pronoun', pronoun);
  
  const stepPronoun = document.getElementById('step-pronoun');
  const finishDiv = document.getElementById('finish');
  const characterSummary = document.getElementById('character-summary');
  
  if (stepPronoun) stepPronoun.style.display = 'none';
  
  // –°–æ–∑–¥–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  const name = window.getFlag('name');
  const PRESETS = {
    nerd: { name: '–ë–æ—Ç–∞–Ω–∏–∫', emoji: 'ü§ì' },
    rich: { name: '–ú–∞–∂–æ—Ä', emoji: 'üíé' }, 
    crossdresser: { name: '–ö—Ä–æ—Å—Å–¥—Ä–µ—Å—Å–µ—Ä', emoji: 'üíÉ' },
    athlete: { name: '–°–ø–æ—Ä—Ç—Å–º–µ–Ω', emoji: 'üí™' },
    default: { name: '–û–±—ã—á–Ω—ã–π', emoji: 'üòê' }
  };
  
  const preset = PRESETS[window.selectedPreset];
  
  if (characterSummary) {
    characterSummary.innerHTML = `
      <div style="background: rgba(16, 185, 129, 0.1); padding: 20px; border-radius: 8px; border: 1px solid #10b981;">
        <h3>‚úÖ –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–∂ –≥–æ—Ç–æ–≤:</h3>
        <p><strong>–ò–º—è:</strong> ${name}</p>
        <p><strong>–ü—Ä–æ—Ñ–∏–ª—å:</strong> ${preset.emoji} ${preset.name}</p>
        <p><strong>–ú–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è:</strong> ${pronoun}</p>
      </div>
    `;
  }
  
  if (finishDiv) {
    finishDiv.style.display = 'block';
    finishDiv.scrollIntoView({ behavior: 'smooth' });
  }
};

window.startGame = () => {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–≥—Ä—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω–∞—á–∞–ª—É
  window.saveGame();
  window.location.search = '?scene=start';
};

// –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ—Ä–∏–¥–æ—Ä–∞
window.goToRoom = (roomId) => {
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞
  if (event && event.target) {
    const navOption = event.target.closest('.nav-option');
    if (navOption) {
      navOption.style.transform = 'scale(0.95)';
      setTimeout(() => {
        if (window.gameEngine) {
          window.gameEngine.loadScene(roomId);
        } else {
          window.location.search = `?scene=${roomId}`;
        }
      }, 150);
      return;
    }
  }
  
  // Fallback –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏
  if (window.gameEngine) {
    window.gameEngine.loadScene(roomId);
  } else {
    window.location.search = `?scene=${roomId}`;
  }
};

// ================== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –í–ê–ù–ù–û–ô –ö–û–ú–ù–ê–¢–´ ==================

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞–Ω–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã
window.loadBathroom = async function() {
  try {
    // –ò–º–ø–æ—Ä—Ç —Å–∏—Å—Ç–µ–º—ã –∫–≤–∞—Ä—Ç–∏—Ä
    const ApartmentSystem = (await import('../systems/ApartmentSystem.js')).default;
    const apartmentSystem = new ApartmentSystem(window.store);
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–Ω–Ω–æ–π –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã
    const bathroomImage = apartmentSystem.getRoomImage('bathroom');
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageContainer = document.getElementById('bathroom-image-container');
    if (imageContainer) {
      imageContainer.innerHTML = `
        <div class="location-image">
          <img src="${bathroomImage}" alt="–í–∞–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞" onerror="this.src='/assets/images/placeholder_bathroom.jpg'">
        </div>
      `;
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    window.loadSpecialBathroomActions();
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞–Ω–Ω–æ–π:', error);
    
    // Fallback –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const imageContainer = document.getElementById('bathroom-image-container');
    if (imageContainer) {
      imageContainer.innerHTML = `
        <div class="location-image">
          <img src="/assets/images/placeholder_bathroom.jpg" alt="–í–∞–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞">
        </div>
      `;
    }
  }
};

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
window.loadSpecialBathroomActions = function() {
  const specialContainer = document.getElementById('bathroom-special-actions');
  if (!specialContainer) return;
  
  const actions = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
  const inventory = window.store.inventory || [];
  const femininity = window.getStat('femininity') || 0;
  
  // –ú–∞–∫–∏—è–∂
  if (inventory.some(item => item.id === 'makeup_basic') && femininity >= 10) {
    actions.push({
      text: 'üíÑ –ù–∞–∫—Ä–∞—Å–∏—Ç—å—Å—è',
      onclick: 'applyMakeup()',
      description: '–ù–∞–Ω–µ—Å—Ç–∏ –º–∞–∫–∏—è–∂'
    });
  }
  
  // –í–∞–Ω–Ω–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–æ—Å–∫–æ—à–Ω—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä)
  const apartmentType = window.store.flags.apartmentType || 'parents';
  if (apartmentType === 'luxury') {
    actions.push({
      text: 'üõÅ –ü—Ä–∏–Ω—è—Ç—å –≤–∞–Ω–Ω—É',
      onclick: 'takeBath()',
      description: '–†–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è –≤ –¥–∂–∞–∫—É–∑–∏'
    });
  }
  
  // –î–µ–ø–∏–ª—è—Ü–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞)
  if (inventory.some(item => item.id === 'hair_removal_cream')) {
    actions.push({
      text: 'üß¥ –î–µ–ø–∏–ª—è—Ü–∏—è –∫—Ä–µ–º–æ–º',
      onclick: 'useHairRemovalCream()',
      description: '–£–¥–∞–ª–∏—Ç—å –≤–æ–ª–æ—Å—ã –∫—Ä–µ–º–æ–º'
    });
  }
  
  // –ú–∞–Ω–∏–∫—é—Ä
  if (inventory.some(item => item.id === 'nail_polish') && femininity >= 20) {
    actions.push({
      text: 'üíÖ –°–¥–µ–ª–∞—Ç—å –º–∞–Ω–∏–∫—é—Ä',
      onclick: 'doManicure()',
      description: '–ü–æ–∫—Ä–∞—Å–∏—Ç—å –Ω–æ–≥—Ç–∏'
    });
  }
  
  if (actions.length > 0) {
    specialContainer.innerHTML = `
      <h4>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h4>
      <div class="special-actions">
        ${actions.map(action => `
          <button class="special-action-btn" onclick="${action.onclick}" title="${action.description}">
            ${action.text}
          </button>
        `).join('')}
      </div>
    `;
  }
};

// –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –≤–∞–Ω–Ω–æ–π
window.goToMirror = function() {
  window.gameEngine.loadScene('mirror');
};

window.takeShower = function() {
  const hygiene = window.getStat('hygiene') || 0;
  
  if (hygiene >= 90) {
    alert('üöø –í—ã —É–∂–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–∏—Å—Ç—ã. –ù–µ —Å—Ç–æ–∏—Ç —Ç—Ä–∞—Ç–∏—Ç—å –≤–æ–¥—É –ø–æ–Ω–∞–ø—Ä–∞—Å–Ω—É.');
    return;
  }
  
  window.addStat('hygiene', 25);
  window.addStat('mood', 5);
  window.addStat('energy', 5);
  window.tick(20);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π
  const femininity = window.getStat('femininity') || 0;
  
  if (femininity >= 30) {
    alert('üöø –í—ã –Ω–µ–∂–Ω–æ –Ω–∞–º—ã–ª–∏–ª–∏ —Å–≤–æ—ë —Ç–µ–ª–æ –∞—Ä–æ–º–∞—Ç–Ω—ã–º –≥–µ–ª–µ–º. –ö–æ–∂–∞ —Å—Ç–∞–ª–∞ –º—è–≥–∫–æ–π –∏ –≥–ª–∞–¥–∫–æ–π. –í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è —Å–≤–µ–∂–æ –∏ –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ.');
    window.addStat('femininity', 1);
  } else {
    alert('üöø –í—ã –±—ã—Å—Ç—Ä–æ –ø–æ–º—ã–ª–∏—Å—å –ø–æ–¥ –≥–æ—Ä—è—á–µ–π –≤–æ–¥–æ–π. –ß—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è —á–∏—â–µ –∏ –±–æ–¥—Ä–µ–µ.');
  }
  
  window.loadSpecialBathroomActions(); // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
};

window.brushTeeth = function() {
  window.addStat('hygiene', 10);
  window.addStat('mood', 2);
  window.tick(5);
  
  alert('ü¶∑ –í—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø–æ—á–∏—Å—Ç–∏–ª–∏ –∑—É–±—ã. –î—ã—Ö–∞–Ω–∏–µ —Å—Ç–∞–ª–æ —Å–≤–µ–∂–∏–º, –∞ —É–ª—ã–±–∫–∞ - –æ—Å–ª–µ–ø–∏—Ç–µ–ª—å–Ω–æ–π!');
};

window.useToilet = function() {
  window.tick(3);
  
  const messages = [
    'üöΩ –í—ã —Å–ø—Ä–∞–≤–∏–ª–∏ –Ω—É–∂–¥—É. –ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –æ–±–ª–µ–≥—á–µ–Ω–∏–µ.',
    'üöΩ –í—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–µ –≤ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è—Ö... –î–µ–ª–∞ —Å–¥–µ–ª–∞–Ω—ã.',
    'üöΩ –ù–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –Ω–∞–µ–¥–∏–Ω–µ —Å —Å–æ–±–æ–π.'
  ];
  
  alert(messages[Math.floor(Math.random() * messages.length)]);
};

window.doSkincare = function() {
  const femininity = window.getStat('femininity') || 0;
  
  window.addStat('hygiene', 15);
  window.addStat('mood', 8);
  window.addStat('femininity', 2);
  window.tick(15);
  
  if (femininity >= 40) {
    alert('üß¥ –í—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –æ—á–∏—Å—Ç–∏–ª–∏ –∫–æ–∂—É, –Ω–∞–Ω–µ—Å–ª–∏ —Ç–æ–Ω–∏–∫ –∏ —É–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º. –ö–æ–∂–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Å–∏—è—é—â–µ–π –∏ —É—Ö–æ–∂–µ–Ω–Ω–æ–π!');
  } else {
    alert('üß¥ –í—ã —É–º—ã–ª–∏—Å—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –Ω–µ–º–Ω–æ–≥–æ –∫—Ä–µ–º–∞. –ö–æ–∂–∞ —Å—Ç–∞–ª–∞ –±–æ–ª–µ–µ –º—è–≥–∫–æ–π.');
  }
  
  window.loadSpecialBathroomActions();
};

window.shaveBody = function() {
  const bodyHair = window.store.body?.bodyHair || 2;
  
  if (bodyHair <= 0) {
    alert('ü™í –í–∞—à–µ —Ç–µ–ª–æ —É–∂–µ –∏–¥–µ–∞–ª—å–Ω–æ –≥–ª–∞–¥–∫–æ–µ. –ë—Ä–∏—Ç—å—Å—è –ø–æ–∫–∞ –Ω–µ –Ω—É–∂–Ω–æ.');
    return;
  }
  
  window.addStat('hygiene', 10);
  window.addStat('femininity', 3);
  window.addStat('mood', 5);
  window.tick(25);
  
  // –£–º–µ–Ω—å—à–∞–µ–º –≤–æ–ª–æ—Å—ã –Ω–∞ —Ç–µ–ª–µ
  if (window.store.body) {
    window.store.body.bodyHair = Math.max(0, bodyHair - 1);
  }
  
  alert('ü™í –í—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø–æ–±—Ä–∏–ª–∏—Å—å, —É–¥–∞–ª–∏–≤ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ª–æ—Å—ã. –ö–æ–∂–∞ —Å—Ç–∞–ª–∞ –≥–ª–∞–¥–∫–æ–π –∏ –Ω–µ–∂–Ω–æ–π –Ω–∞ –æ—â—É–ø—å.');
  
  window.loadSpecialBathroomActions();
};

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
window.applyMakeup = function() {
  window.addStat('femininity', 5);
  window.addStat('mood', 10);
  window.addStat('arousal', 3);
  window.tick(20);
  
  alert('üíÑ –í—ã –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –Ω–∞–Ω–µ—Å–ª–∏ –º–∞–∫–∏—è–∂, –ø–æ–¥—á–µ—Ä–∫–Ω—É–≤ —Å–≤–æ–∏ —á–µ—Ä—Ç—ã. –í –∑–µ—Ä–∫–∞–ª–µ –æ—Ç—Ä–∞–∂–∞–µ—Ç—Å—è –±–æ–ª–µ–µ –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –ª–∏—Ü–æ.');
};

window.takeBath = function() {
  window.addStat('hygiene', 30);
  window.addStat('mood', 15);
  window.addStat('stress', -10);
  window.addStat('energy', 10);
  window.tick(45);
  
  alert('üõÅ –í—ã —Ä–∞—Å—Å–ª–∞–±–∏–ª–∏—Å—å –≤ –∞—Ä–æ–º–∞—Ç–Ω–æ–π –≤–∞–Ω–Ω–µ —Å –ø–µ–Ω–æ–π. –¢—ë–ø–ª–∞—è –≤–æ–¥–∞ —Å–º—ã–ª–∞ —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ —Å—Ç—Ä–µ—Å—Å.');
};

window.useHairRemovalCream = function() {
  const bodyHair = window.store.body?.bodyHair || 2;
  
  if (bodyHair <= 0) {
    alert('üß¥ –í–∞—à–µ —Ç–µ–ª–æ —É–∂–µ –∏–¥–µ–∞–ª—å–Ω–æ –≥–ª–∞–¥–∫–æ–µ.');
    return;
  }
  
  window.addStat('femininity', 4);
  window.addStat('hygiene', 5);
  window.addStat('mood', 8);
  window.tick(30);
  
  // –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∏—Ç—å—è
  if (window.store.body) {
    window.store.body.bodyHair = Math.max(0, bodyHair - 2);
  }
  
  alert('üß¥ –ö—Ä–µ–º –¥–ª—è –¥–µ–ø–∏–ª—è—Ü–∏–∏ —Å–¥–µ–ª–∞–ª –∫–æ–∂—É –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –≥–ª–∞–¥–∫–æ–π –∏ –º—è–≥–∫–æ–π. –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–¥–µ—Ä–∂–∏—Ç—Å—è –¥–æ–ª—å—à–µ –æ–±—ã—á–Ω–æ–≥–æ.');
  
  window.loadSpecialBathroomActions();
};

window.doManicure = function() {
  window.addStat('femininity', 6);
  window.addStat('mood', 12);
  window.addStat('hygiene', 8);
  window.tick(40);
  
  alert('üíÖ –í—ã —Å–¥–µ–ª–∞–ª–∏ —Å–µ–±–µ –∫—Ä–∞—Å–∏–≤—ã–π –º–∞–Ω–∏–∫—é—Ä. –ù–æ–≥—Ç–∏ –≤—ã–≥–ª—è–¥—è—Ç –∏–∑—è—â–Ω–æ –∏ –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ.');
};

// ================== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ö–û–†–ò–î–û–†–ê ==================

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∏–¥–æ—Ä–∞
window.loadHallway = async function() {
  try {
    // –ò–º–ø–æ—Ä—Ç —Å–∏—Å—Ç–µ–º—ã –∫–≤–∞—Ä—Ç–∏—Ä
    const ApartmentSystem = (await import('../systems/ApartmentSystem.js')).default;
    const apartmentSystem = new ApartmentSystem(window.store);
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ
    const apartment = apartmentSystem.getCurrentApartmentType();
    const description = apartmentSystem.getApartmentDescription();
    const hallwayImage = apartmentSystem.getRoomImage('hallway');
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageContainer = document.getElementById('hallway-image-container');
    if (imageContainer) {
      imageContainer.innerHTML = `
        <div class="location-image">
          <img src="${hallwayImage}" alt="–ö–æ—Ä–∏–¥–æ—Ä" onerror="this.src='/assets/images/placeholder_hallway.jpg'">
          <div class="image-overlay">
            <h2>${apartment.name}</h2>
          </div>
        </div>
      `;
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
    const descContainer = document.getElementById('hallway-description');
    if (descContainer) {
      descContainer.innerHTML = `
        <div class="apartment-info">
          <p class="apartment-desc">${description.description}</p>
          <div class="apartment-features">
            <h4>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h4>
            <ul>
              ${description.features.map(feature => `<li>${feature}</li>`).join('')}
            </ul>
          </div>
        </div>
      `;
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–≤–∞—Ä—Ç–∏—Ä—ã
    window.loadApartmentActions(apartment);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ—Ä–∏–¥–æ—Ä–∞:', error);
    
    // Fallback –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const imageContainer = document.getElementById('hallway-image-container');
    if (imageContainer) {
      imageContainer.innerHTML = `
        <div class="location-image">
          <img src="/assets/images/placeholder_hallway.jpg" alt="–ö–æ—Ä–∏–¥–æ—Ä">
          <div class="image-overlay">
            <h2>–ö–æ—Ä–∏–¥–æ—Ä</h2>
          </div>
        </div>
      `;
    }
    
    const descContainer = document.getElementById('hallway-description');
    if (descContainer) {
      descContainer.innerHTML = `
        <div class="apartment-info">
          <p>–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ. –û—Ç—Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–æ–ø–∞—Å—Ç—å –≤ —Ä–∞–∑–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã.</p>
        </div>
      `;
    }
  }
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã
window.loadApartmentActions = function(apartment) {
  const actionsContainer = document.getElementById('hallway-actions');
  if (!actionsContainer) return;
  
  const actions = [];
  
  switch (apartment.id) {
    case 'luxury':
      actions.push({
        text: 'üè† –í—ã–∑–≤–∞—Ç—å –∫–æ–Ω—Å—å–µ—Ä–∂–∞',
        onclick: 'callConcierge()',
        description: '–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Å—å–µ—Ä–∂—É –∑–∞ –ø–æ–º–æ—â—å—é'
      });
      actions.push({
        text: 'üì∫ –í–∫–ª—é—á–∏—Ç—å —É–º–Ω—ã–π –¥–æ–º',
        onclick: 'activateSmartHome()',
        description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ–º –∏ –∫–ª–∏–º–∞—Ç–æ–º'
      });
      break;
      
    case 'cheap':
      actions.push({
        text: 'üîß –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å',
        onclick: 'checkBrokenStuff()',
        description: '–í –¥–µ—à–µ–≤–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ –≤—Å–µ–≥–¥–∞ —á—Ç–æ-—Ç–æ –ª–æ–º–∞–µ—Ç—Å—è'
      });
      break;
      
    case 'parents':
      actions.push({
        text: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏',
        onclick: 'talkToParents()',
        description: '–ü–æ–æ–±—â–∞—Ç—å—Å—è —Å —Å–µ–º—å–µ–π'
      });
      break;
      
    case 'studio':
      actions.push({
        text: 'üé® –ó–∞–Ω—è—Ç—å—Å—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º',
        onclick: 'doCreativeWork()',
        description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É'
      });
      break;
  }
  
  if (actions.length > 0) {
    actionsContainer.innerHTML = `
      <h4>–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h4>
      <div class="special-actions">
        ${actions.map(action => `
          <button class="special-action-btn" onclick="${action.onclick}" title="${action.description}">
            ${action.text}
          </button>
        `).join('')}
      </div>
    `;
  }
};

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–≤–∞—Ä—Ç–∏—Ä
window.callConcierge = function() {
  window.addStat('mood', 5);
  window.addStat('dignity', 2);
  window.tick(10);
  
  alert('üè† –ö–æ–Ω—Å—å–µ—Ä–∂ –ø—Ä–∏–≤–µ—Ç–ª–∏–≤–æ –ø–æ–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –≤–∞—à–∏–º–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º–∏. –ü—Ä–∏—è—Ç–Ω–æ –∂–∏—Ç—å –≤ —Ä–æ—Å–∫–æ—à–∏!');
};

window.activateSmartHome = function() {
  window.addStat('mood', 3);
  window.addStat('energy', 5);
  window.tick(5);
  
  alert('üì∫ –£–º–Ω—ã–π –¥–æ–º –Ω–∞—Å—Ç—Ä–æ–∏–ª –∏–¥–µ–∞–ª—å–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É. –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–µ–ª–∞—é—Ç –∂–∏–∑–Ω—å –ª—É—á—à–µ!');
};

window.checkBrokenStuff = function() {
  const problems = [
    '–ü—Ä–æ—Ç–µ–∫–∞–µ—Ç –∫—Ä–∞–Ω',
    '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∞–º–ø–æ—á–∫–∞',
    '–°–∫—Ä–∏–ø–∏—Ç –¥–≤–µ—Ä—å',
    '–û—Ç–∫–ª–µ–∏–ª–∏—Å—å –æ–±–æ–∏',
    '–®—É–º—è—Ç —Ç—Ä—É–±—ã'
  ];
  
  const problem = problems[Math.floor(Math.random() * problems.length)];
  
  window.addStat('mood', -3);
  window.addStat('stress', 5);
  window.tick(8);
  
  alert(`üîß ${problem}. –ï—â—ë –æ–¥–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ –≤ —ç—Ç–æ–π –¥–µ—à—ë–≤–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ...`);
};

window.talkToParents = function() {
  const femininity = window.getStat('femininity') || 0;
  
  window.addStat('mood', 3);
  window.addStat('social', 2);
  window.tick(15);
  
  if (femininity >= 30) {
    window.addStat('stress', 5);
    alert('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –†–æ–¥–∏—Ç–µ–ª–∏ –æ–±—Ä–∞—Ç–∏–ª–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≤–∞—à–µ–π –≤–Ω–µ—à–Ω–æ—Å—Ç–∏. –í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ.');
  } else {
    alert('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ü—Ä–∏—è—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏. –°–µ–º–µ–π–Ω–æ–µ —Ç–µ–ø–ª–æ –≤—Å–µ–≥–¥–∞ –ø–æ–¥–Ω–∏–º–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.');
  }
};

window.doCreativeWork = function() {
  window.addStat('mood', 8);
  window.addStat('energy', -10);
  window.addStat('stress', -5);
  window.tick(45);
  
  alert('üé® –í—ã –ø–æ–≥—Ä—É–∑–∏–ª–∏—Å—å –≤ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å. –°—Ç—É–¥–∏–π–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –Ω–∞ –Ω–æ–≤—ã–µ –∏–¥–µ–∏!');
};

// –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
window.debugLogger?.log('DEBUG', 'All scene functions registered. Final check:');
window.debugLogger?.checkFunctionAvailability([
  'selectPreset', 'confirmName', 'setPronoun', 'startGame',
  'goToRoom', 'goToMirror', 'takeShower', 'brushTeeth', 'useToilet',
  'loadBathroom', 'loadHallway', 'applyMakeup', 'takeBath'
]);

// Debug —Ñ—É–Ω–∫—Ü–∏–∏
window.debugStats = () => {
  console.table(store.stats);
};

window.debugFlags = () => {
  console.table(store.flags);
};

window.debugTime = () => {
  console.log(`–î–µ–Ω—å ${store.time.day}, ${store.getTimeString()}, —Ñ–∞–∑–∞: ${store.getTimePhase()}`);
};

window.resetGame = () => {
  localStorage.removeItem('sls-save');
  localStorage.removeItem('sls-settings');
  location.reload();
};

// –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
window.testStats = () => {
  console.log('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫...');
  store.addStat('femininity', 25);
  store.addStat('sissification', 15);
  store.addStat('submission', 10);
  store.addStat('arousal', 30);
  store.addStat('stress', 20);
  store.addStat('mood', -10);
  console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
};

window.testTime = () => {
  console.log('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏...');
  store.tick(120); // +2 —á–∞—Å–∞
  console.log(`–ù–æ–≤–æ–µ –≤—Ä–µ–º—è: ${store.getTimeString()}`);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
window.testItems = () => {
  console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');
  
  const testItems = [
    {
      id: 'pink_panties',
      name: '–†–æ–∑–æ–≤—ã–µ —Ç—Ä—É—Å–∏–∫–∏',
      icon: 'üëô',
      slot: 'underwear',
      effects: { femininity: 5, arousal: 2 },
      description: '–ú–∏–ª—ã–µ —Ä–æ–∑–æ–≤—ã–µ —Ç—Ä—É—Å–∏–∫–∏ –∏–∑ —à–µ–ª–∫–∞'
    },
    {
      id: 'red_dress',
      name: '–ö—Ä–∞—Å–Ω–æ–µ –ø–ª–∞—Ç—å–µ',
      icon: 'üëó',
      slot: 'upper',
      effects: { femininity: 10, dignity: -3 },
      description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ –∫—Ä–∞—Å–Ω–æ–µ –ø–ª–∞—Ç—å–µ'
    },
    {
      id: 'high_heels',
      name: '–¢—É—Ñ–ª–∏ –Ω–∞ –∫–∞–±–ª—É–∫–∞—Ö',
      icon: 'üë†',
      slot: 'shoes',
      effects: { femininity: 8, energy: -5 },
      description: '–ö—Ä–∞—Å–∏–≤—ã–µ —Ç—É—Ñ–ª–∏ –Ω–∞ –≤—ã—Å–æ–∫–æ–º –∫–∞–±–ª—É–∫–µ'
    }
  ];
  
  testItems.forEach(item => store.addItem(item));
  console.log('–¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è UI
window.testUI = () => {
  console.log('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI...');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
  window.testItems();
  
  // –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  window.testStats();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  uiManager.showNotification('UI —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!', 'success');
  
  console.log('UI —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ—Å–µ—Ç–æ–≤
window.testPresets = () => {
  console.log('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–æ–≤...');
  
  const presets = CharacterPresets.getAllPresets();
  console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ—Å–µ—Ç—ã:', presets);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–µ—Å–µ—Ç
  presets.forEach(preset => {
    const effects = CharacterPresets.getPresetEffects(preset.id);
    console.log(`–≠—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–µ—Å–µ—Ç–∞ ${preset.name}:`, effects);
  });
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–µ—Å–µ—Ç
  window.applyCharacterPreset('crossdresser');
  console.log('–ü—Ä–∏–º–µ–Ω–µ–Ω –ø—Ä–µ—Å–µ—Ç –∫—Ä–æ—Å—Å–¥—Ä–µ—Å—Å–µ—Ä–∞');
  
  uiManager.showNotification('–ü—Ä–µ—Å–µ—Ç—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
};

  console.log('üéÆ Dev —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window: saveGame, loadGame, setStat, addStat, getStat, testStats, testTime, testItems, testUI, testPresets, debugStats, resetGame, runTests, quickTest, stressTest, testSetCommands, testNewGameSystem, testMissingScenes, testSubscriptionSystem, testCharacterCreationFlow, testLocationSystem, testLocationNavigation, testBathroomActions');
  console.log('üêõ Debug —Ñ—É–Ω–∫—Ü–∏–∏: debugHTMLProblem(), reloadSceneWithDebug(sceneId), debugLogger.exportLogs(), quickCheck()');
  console.log('üöÄ –í—ã–ø–æ–ª–Ω–∏—Ç–µ quickCheck() –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π!');
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –ø–∞–Ω–µ–ª—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  setTimeout(() => {
    if (window.debugLogger && document.getElementById('debug-panel')) {
      window.debugLogger.log('INFO', '‚úÖ Debug panel initialized and ready');
      window.debugLogger.log('INFO', 'üîß CRITICAL FIXES APPLIED - run quickCheck() to verify');
    }
  }, 100); 

// –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–±–∞–≥ –ø–∞–Ω–µ–ª—å—é
window.showDebug = () => {
  if (window.debugLogger) {
    window.debugLogger.showPanel();
    console.log('‚úÖ –î–µ–±–∞–≥ –ø–∞–Ω–µ–ª—å –≤–∫–ª—é—á–µ–Ω–∞');
  }
};

window.hideDebug = () => {
  if (window.debugLogger) {
    window.debugLogger.hidePanel();
    console.log('‚úÖ –î–µ–±–∞–≥ –ø–∞–Ω–µ–ª—å –æ—Ç–∫–ª—é—á–µ–Ω–∞');
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö 